@page "/books"
@inject HttpClient Http
@using BookApp.Models
@rendermode InteractiveServer
@inject NavigationManager Nav

<h3>Ma biblioth√®que üìö</h3>

@if (books is null)
{
    <p><em>Chargement en cours...</em></p>
}
else
{
    <ul>
        @foreach (var book in books)
        {
            <li>
                <strong>@book.Title</strong> par @book.Author
                @if (book.IsRead)
                {
                    <span style="color: green;"> (lu)</span>
                }
                else
                {
                    <button class="btn btn-sm btn-primary" @onclick="() => MarkAsRead(book.Id)">Marquer comme lu</button>
                }
            </li>
        }
    </ul>
}

<hr />

<h4>Ajouter un livre</h4>
<EditForm Model="newBook" OnValidSubmit="AddBook">
    <InputText @bind-Value="newBook.Title" placeholder="Titre" class="form-control mb-2" />
    <InputText @bind-Value="newBook.Author" placeholder="Auteur" class="form-control mb-2" />
    <button type="submit" class="btn btn-success">Ajouter</button>
</EditForm>

@code {
    private List<Book>? books;
    private Book newBook = new(); // Keep only one declaration of newBook

    protected override async Task OnInitializedAsync()
    {
        await LoadBooks();
    }

    private async Task LoadBooks()
    {
        try
        {
            books = await Http.GetFromJsonAsync<List<Book>>("books") ?? new List<Book>();
        }
        catch
        {
            Console.WriteLine("Erreur lors de la r√©cup√©ration des livres");
            books = new List<Book>();
        }
    }

    private async Task AddBook()
    {
        var response = await Http.PostAsJsonAsync("books", newBook);

        if (response.IsSuccessStatusCode)
        {
            newBook = new();
            Console.WriteLine("Livre ajout√© avec succ√®s !");
        }
        else
        {
            Console.WriteLine("Erreur lors de l'ajout !");
        }
    }

    private async Task MarkAsRead(int id)
    {
        var book = books?.FirstOrDefault(b => b.Id == id);
        if (book is null) return;

        var response = await Http.PutAsJsonAsync($"books/{id}", new { IsRead = true });

        if (response.IsSuccessStatusCode)
        {
            book.IsRead = true;
            StateHasChanged();
        }
        else
        {
            Console.WriteLine("modification non appliqu√©e");
        }
    }
}